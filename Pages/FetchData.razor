@page "/fetchdata"
@inject ILocalStorageService local
@inject NavigationManager nav
@layout EmptyLayout
<PageTitle>Ajustes</PageTitle>
<div class="row m-2">
    <div class="d-flex">
        <a href="/home" class="btn btn-outline-danger border-0 shadow-none"><MudIcon Icon="@Icons.Material.Filled.ArrowBack"></MudIcon></a>
        <h5 class="my-auto">Ajustes</h5>
    </div>
    <img class="mx-auto w-50 mb-2 rounded-3" src="@back"/>
    <div class="d-flex">
        <InputFile hidden id="files" OnChange="OnChange" access="image/*" />
        <button class="btn btn-outline-dark" @onclick="addback"><MudIcon Icon="@Icons.Material.Filled.Add" /></button>
        <input class="form-control mx-1" placeholder="url" @bind="back" />
        <label class="btn btn-outline-primary" for="files"><MudIcon Icon="@Icons.Material.Filled.ImageSearch" /></label>
    </div>
</div>
@code {
    string? back;
    private const int maxAllowedFiles = 2;
    private async void addback()
    {
        await local.SetItemAsync("background",back);
        nav.NavigateTo("home");
    }

    private async Task OnChange(InputFileChangeEventArgs e)
    {
        foreach (var file in e.GetMultipleFiles(maxAllowedFiles))
        {
            using var stream = file.OpenReadStream();
            using var ms = new MemoryStream();
            await stream.CopyToAsync(ms);
            back = $"data:{file.ContentType};base64,{Convert.ToBase64String(ms.ToArray())}";
        }
    }
}
